[package]
name = "novusk"
version = "3.0.0-beta-kernel-v3"
authors = ["Nathan McMillan <nathanmcmillan54@gmail.com>"]
edition = "2018"

[[bin]]
name = "novusk_kernel"
path = "src/main.rs"
edition = "2018"

[lib]
name = "novusk"
path = "src/lib.rs"
edition = "2018"
#
# crate-type = ["staticlib"]

[workspace]
members = [
    # Architectures
    "arch/aarch64/",
    "arch/arm32/",
    # Drivers
    "drivers/blue/",
    "drivers/boot/multiboot/",
    "drivers/cpu/",
    "drivers/device/",
    "drivers/firmware/arm/stellarisd/",
    "drivers/firmware/arm/stmd/",
    "drivers/firmware/sifive/",
    "drivers/gpu/vgag/",
    "drivers/input/keyboard/",
    "drivers/input/keyboard/pc_keyboard/",
    "drivers/input/mouse/",
    "drivers/input/mouse/ps2_mouse/",
    "drivers/net/ethernet/",
    "drivers/nkuefi/",
    "drivers/rpi/",
    "drivers/sos/",
    "drivers/usbd/",
    # Fs
    "fs/tempfs/",
    "fs/vfs/",
    # Include
    "include/ctypes/",
    "include/novusk/",
    # Kernel
    "init/",
    "kernel/kinfo/",
    "kernel/konfig/",
    "kernel/modules/",
    "kernel/notify/",
    "kernel/power/",
    "kernel/printk/",
    "kernel/setup/",
    "kernel/time/",
    # Libraries
    "lib/libbmu/",
    "lib/libc/stdio/",
    "lib/libc/unistd/",
    "lib/libcolor/",
    "lib/libost/",
    "lib/libwin/",
    # MM
    "mm/mio/",
    "mm/memory/",
    "mm/nmallocator/",
    # Net
    # "net/ethernet/stm_eth/",
    # Sound
    # Kernel Modules
    "kernel/modules/ex1/",
    "kernel/modules/fscheck/",
    # Tools
    "tools/bootloader_image/",
]

[dependencies]
kinfo = { path = "kernel/kinfo/" }
libcolor = { path = "lib/libcolor/" }
memory = { path = "mm/memory/" }
novuskinc = { path = "include/novusk/" }
printk = { path = "kernel/printk/" }
# power = { path = "kernel/power/" }
stdio = { path = "lib/libc/stdio/" }
usbd = { path = "drivers/usbd/" }
unistd = { path = "lib/libc/unistd/" }

[target.'cfg(target_arch = "aarch64")'.dependencies]
aarch64 = { path = "arch/aarch64/" }
libbmu = { path = "lib/libbmu/" }
rpi = { path = "drivers/rpi/" }

[target.'cfg(target_arch = "arm")'.dependencies]
arm32 = { path = "arch/arm32/" }
libbmu = { path = "lib/libbmu/" }

[features]
bios_boot = ["arm32/bios_boot"]
custom_config = []
esp32 = ["xtensa/esp32"]
grub = ["multiboot", "arm32/grub"]
multiboot = []
rpi3 = ["aarch64/rpi3"]
stellaris_6965 = ["arm32/stellaris_6965"]
stm32f407 = ["arm32/stm32f407"]
uefi_boot = ["arm32/uefi_boot"]
vga_0xa = ["arm32/vga_0xa", "bootloader/vga_320x200"]
virt = ["aarch64/qemu_virt", "arm32/virt"]

# For developers:
qemu = []
debug = []
